name: Build and Test Workflow
on:
  push:
    branches:
      - main 
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
    inputs:
      PERFORM_RELEASE:
        description: '[Release] perform release'
        required: false
        default: 'false'
        type: boolean
  

jobs:
  check-permission:
    runs-on: ubuntu-latest
    steps:
      # this action will fail the whole workflow if permission check fails
      - name: check permission
        uses: zowe-actions/shared-actions/permission-check@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  validate-package-json:
    needs: check-permission
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Validate package.json
        uses: zowe-actions/shared-actions/validate-package-json@main

  build-test:
    runs-on: ubuntu-latest
    needs: validate-package-json
    steps: 
      - name: '[Prep 1] Checkout'
        uses: actions/checkout@v2

      - name: '[Prep 2] Cache node modules'
        uses: actions/cache@v2
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: |
            ~/.npm
            ~/.nvm/.cache
            ~/.nvm/versions
          key: ${{ runner.os }}-build-cache-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-cache-node-modules-
          
      - name: '[Prep 4] Prepare workflow'
        uses: zowe-actions/shared-actions/prepare-workflow@main
          
      - name: '[Prep 5] Setup Node'
        uses: actions/setup-node@v2
        with:
          node-version: 8.11.4

      - name: '[Setup] NodeJS project setup'
        uses: zowe-actions/nodejs-actions/setup@main
        with:
          package-name: 'org.zowe.zebra'

      - name: '[Build] Nodejs project build'
        run: npm run prod

      - name: '[Test] Nodejs project unit test'
        run: npm run test

      - name: '[Scan 1] Fix code coverage paths'
        working-directory: ./coverage
        run: sed -i 's#'$GITHUB_WORKSPACE'#/github/workspace/#g' lcov.info

      - name: '[Scan 2] SonarCloud Scan'
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
          sonar.projectVersion: ${{ env.P_VERSION }}
          sonar.links.ci: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'

      - name: '[Deploy] Deploy to demo server'
        uses: appleboy/ssh-action@master
        if: success()
        with:
          host: ${{ secrets.DEMO_SERVER_HOST }}
          username: ${{ secrets.DEMO_SERVER_USERNAME }}
          key: ${{ secrets.DEMO_SERVER_KEY }}
          script: |
            cd /root/zebra
            git pull origin main
            


